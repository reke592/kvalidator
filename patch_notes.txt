# ------------------
# - Version 1.1.6 :: KISS
#     - [REMOVED] KValidatorBuilder
#     - [REMOVED] Validator hooks
#     + [MODIFY] validator.validateArray() :: from methods parameter (arr) -> (arr, onResultCb, cb)
#     + [OPTIMIZATION] _validation function
#     
# ------------------
# - Version 1.1.3
#			+ [OPTIMIZATION] validator.validateArray() :: from O(n^2) -> O(n)
#			+ validator.mix() :: include an option to test function
#					eg.
#						validator.mix({
#							somefn : [Function]
#						})
#
#						validator.defineTest({value, message, somefn}) {
#							somefn(value);
#							return message(bool, message);
#						}
#			+ validator.setRules(rules) :: change the validator rules
#
# ------------------
# - Version 1.1.2
#			+ validator.summary() :: returns summary of validation (eg. { age:false } when any condition in rules is violated.)
#			+ validator.validateArray() :: for bulk data validation
#
# ------------------
# - Version 1.1.1
#     + [MODIFY] error messages from array to object for better access
#     + validator.fail() returns the error count
#     + validator.invalid(param_name) check if the parameter name is invalid based on rules
#     + validator.messages() returns the error messages
#
# ------------------
# - Version 1.1.0
#
#     lib/Validator.js    (main)
#     lib/rule-parse.js
#     lib/test.js         (pre-defined rules)
#
# pre-defined rules can be overriden by using the Validator.defineTest(slug, fn) method
#